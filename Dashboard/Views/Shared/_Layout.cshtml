<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - Dashboard</title>
    <link href="~/assets/plugin/select2/dist/css/select2.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    @* <link rel="stylesheet" href="~/assets/css/style.css" asp-append-version="true" /> *@
    <link rel="stylesheet" href="~/Dashboard.styles.css" asp-append-version="true" />
    <style>
        .dropdown-menu {
            max-height: 300px; /* Atur tinggi maksimum sesuai kebutuhan */
            overflow-y: auto; /* Tambahkan scrollbar jika konten melebihi tinggi maksimum */
        }
    </style>
</head>
<body>
    <header>
        <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
            <div class="container-fluid">
                <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index">Dashboard</a>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-between">
                    <ul class="navbar-nav flex-grow-1">
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index">Home</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
                        </li>
                        <li class="nav-item">
                            <a class="nav-link text-dark" asp-area="" asp-controller="Dashboard" asp-action="Index">Dashboard</a>
                        </li>
                    </ul>
                    <ul class="navbar-nav">
                        <li class="nav-item dropdown">
                            <a id="dropdownMenuButton" class="nav-link dropdown-toggle text-dark" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">Dropdown</a>
                            <ul class="dropdown-menu">
                                <li>
                                    <input type="text" class="form-control" id="dropdownSearch" placeholder="Search...">
                                </li>
                                <div id="dropdownItems">
                                    @if (ViewBag.EmployeeNiks != null)
                                    {
                                        foreach (var nik in ViewBag.EmployeeNiks)
                                        {
                                        <li><a class="dropdown-item" href="#">@nik</a></li>
                                        }
                                    }
                                    else
                                    {
                                    <li><a class="dropdown-item" href="#">No Data Available</a></li>
                                    }
                               </div>
                            @* <select required class="js-example-placeholder-multiple js-states form-control" id="EmpNik" name="EmpNik" style="width:100%">
                            </select> *@
                            </ul>
                        </li>
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div class="@ViewBag.ContainerClass ?? "container"">
        <main role="main" class="pb-3">
            @RenderBody()
        </main>
    </div>

    @if (!(ViewContext.RouteData.Values["controller"].ToString() == "Dashboard" && (ViewContext.RouteData.Values["action"].ToString() == "Index" || ViewContext.RouteData.Values["action"].ToString() == "DashboardQuiz")))
    {
        <footer class="border-top footer text-muted">
            <div class="container">
                &copy; 2024 - Dashboard - <a asp-area="" asp-controller="Home" asp-action="Privacy">Privacy</a>
            </div>
        </footer>
    }

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="~/js/site.js" asp-append-version="true"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="@Url.Content("~/assets/plugin/select2/dist/js/select2.min.js")"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            // DropdownEmpNik('EmpNik', 10, false);
            // Load the saved dropdown selection from sessionStorage
            var savedSelection = sessionStorage.getItem('dropdownSelection');
            if (savedSelection) {
                $('#dropdownMenuButton').text(savedSelection);
                $(document).trigger('dropdownChanged', savedSelection);

            }

            // Search functionality
            $('#dropdownSearch').on('keyup', function () {
                var value = $(this).val().toLowerCase();
                $('#dropdownItems li').filter(function () {
                    $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
                });
            });

            // Change dropdown text on item select
            $('#dropdownItems').on('click', '.dropdown-item', function () {
                var selectedText = $(this).text();
                $('#dropdownMenuButton').text(selectedText);
                sessionStorage.setItem('dropdownSelection', selectedText);
                $(document).trigger('dropdownChanged', selectedText);
                $('#dropdownMenuButton').dropdown('hide'); // Hide the dropdown after selection

                sendDropdownSelectionToServer(selectedText);
            });

            function sendDropdownSelectionToServer(selectedText) {
                $.ajax({
                    url: '@Url.Action("Index", "Dashboard")',
                    type: 'POST',
                    data: { employeeNik: selectedText },
                    success: function (response) {
                        console.log('Data berhasil dikirim ke server.');
                    },
                    error: function (error) {
                        console.error('Terjadi kesalahan saat mengirim data:', error);
                    }
                });

                $.ajax({
                    url: '@Url.Action("DashboardQuiz", "Dashboard")',
                    type: 'POST',
                    data: { employeeNik: selectedText },
                    success: function (response) {
                        console.log("Request URL:", '@Url.Action("DashboardQuiz", "Dashboard")');
                    },
                    error: function (error) {
                        console.error('Terjadi kesalahan saat mengirim data:', error);
                    }
                });
            }
        });

        // function DropdownEmpNik(elementId, jumlahRowPerPage, isMultiple) {
        //     var dropdwon = $("#" + elementId).select2({
        //         ajax: {
        //             url: '@Url.Action("GetAllEmpNik", "Home")',
        //             method: 'POST',
        //             dataType: 'json',
        //             delay: 250,
        //             multiple: isMultiple,
        //             allowClear: true,
        //             data: function (params) {
        //                 return {
        //                     q: params.term, // search term
        //                     page: params.page || 1,
        //                     rowPerPage: jumlahRowPerPage,
        //                 };
        //             },
        //             processResults: function (data, params) {

        //                 params.page = params.page || 1;

        //                 return {
        //                     results: data.items,
        //                     pagination: {
        //                         more: (params.page * jumlahRowPerPage) < data.total_count
        //                     }
        //                 };
        //             },
        //             cache: true
        //         },
        //         placeholder: '-Choose One-',
        //         escapeMarkup: function (markup) { return markup; }, // let our custom formatter work
        //         minimumInputLength: 0
        //         //templateResult: formatRepoPegawai
        //     });
        //     var select2Instance = $('#' + elementId).data('select2');
        //     select2Instance.on('results:message', function (params) {
        //         this.dropdown._resizeDropdown();
        //         this.dropdown._positionDropdown();
        //     });
        //}

    </script>

    @await RenderSectionAsync("Scripts", required: false)
</body>
</html>
