@{
    ViewBag.ContainerClass = "container-fluid";
}

<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta content="width=device-width, initial-scale=1.0" name="viewport">

    <!-- <title>Dashboard - NiceAdmin Bootstrap Template</title> -->
    <meta content="" name="description">
    <meta content="" name="keywords">

    <!-- Favicons -->
    <link href="~/assets/img/favicon.png" rel="icon">
    <link href="~/assets/img/apple-touch-icon.png" rel="apple-touch-icon">

    <!-- Google Fonts -->
    <link href="https://fonts.gstatic.com" rel="preconnect">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans:300,300i,400,400i,600,600i,700,700i|Nunito:300,300i,400,400i,600,600i,700,700i|Poppins:300,300i,400,400i,500,500i,600,600i,700,700i" rel="stylesheet">

    <!-- Vendor CSS Files -->
    <link href="~/assets/vendor/bootstrap/css/bootstrap.min.css" rel="stylesheet">
    <link href="~/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
    <link href="~/assets/vendor/boxicons/css/boxicons.min.css" rel="stylesheet">
    <link href="~/assets/vendor/quill/quill.snow.css" rel="stylesheet">
    <link href="~/assets/vendor/quill/quill.bubble.css" rel="stylesheet">
    <link href="~/assets/vendor/remixicon/remixicon.css" rel="stylesheet">
    <link href="~/assets/vendor/simple-datatables/style.css" rel="stylesheet">

    <!-- Template Main CSS File -->
    <link href="~/assets/css/style.css" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />

    <!-- Data Table -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.13.4/css/jquery.dataTables.min.css">

    <!-- =======================================================
    * Template Name: NiceAdmin
    * Template URL: https://bootstrapmade.com/nice-admin-bootstrap-admin-html-template/
    * Updated: Apr 20 2024 with Bootstrap v5.3.3
    * Author: BootstrapMade.com
    * License: https://bootstrapmade.com/license/
    ======================================================== -->
</head>

<body>

    <main id="main" class="main">

        <div class="pagetitle">
            <h1>Dashboard Quiz</h1>
            <nav>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-area="" asp-controller="Dashboard" asp-action="Index">Dashboard</a></li>
                    <li class="breadcrumb-item active">Dashboard Quiz</li>
                </ol>
            </nav>
        </div><!-- End Page Title -->

        <section class="section dashboard">

            <div class="row">

                <div class="col-12">
                    <div class="card info-card p-2">
                        <div class="date-filter-container mx-3">
                            <div class="dropdown">
                                <button class="btn btn-primary dropdown-toggle" type="button" id="multiSelectDropdown"
                                        data-bs-toggle="dropdown" aria-expanded="false">
                                    Daftar Tes
                                </button>
                                <ul class="dropdown-menu" id="dropdownMenu" aria-labelledby="multiSelectDropdown">
                                </ul>
                            </div>

                            <div class="date-filters">
                                <div class="form-group">
                                    <label for="startDate" class="card-title">Start Date</label>
                                    <input type="month" id="startDate" class="form-control">
                                </div>
                                <div class="form-group">
                                    <label for="endDate" class="card-title">End Date</label>
                                    <input type="month" id="endDate" class="form-control">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-2 col-md-4">
                    <div class="card info-card sales-card">

                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body">
                            <h5 class="card-title">Jumlah Test Diikuti</h5>

                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-list-check"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <h6 id="jumlahTestDiikuti">0 Quiz</h6>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-lg-2 col-md-4">
                    <div class="card info-card sales-card">

                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body">
                            <h5 class="card-title">Jumlah Quiz Lulus</h5>

                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <h6 id="jumlahQuizLulus">0 Quiz</h6>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-lg-2 col-md-4">
                    <div class="card info-card sales-card">

                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body">
                            <h5 class="card-title">Jumlah Quiz Remedial</h5>

                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-check-circle"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <h6 id="jumlahQuizTidakLulus">0 Quiz</h6>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-lg-2 col-md-4">
                    <div class="card info-card sales-card">

                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body">
                            <h5 class="card-title">Skor Rata-Rata</h5>

                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-bar-chart"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <h6 id="skorAvg"></h6>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-lg-2 col-md-4">
                    <div class="card info-card sales-card">

                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body">
                            <h5 class="card-title">Skor Terbaik</h5>

                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-trophy"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <h6 id="skorTerbaik"></h6>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
                
                <div class="col-lg-2 col-md-4">
                    <div class="card info-card sales-card">

                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body">
                            <h5 class="card-title">Skor Terendah</h5>

                            <div class="d-flex align-items-center">
                                <div class="card-icon rounded-circle d-flex align-items-center justify-content-center">
                                    <i class="bi bi-trophy"></i>
                                </div>
                                <div class="ps-3 w-100">
                                    <h6 id="skorTerendah"></h6>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

                <div class="col-xxl-6 col-md-6 col-lg-6">
                    <!-- Visit -->
                    <div class="card info-card">
                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body pb-0">
                            <h5 class="card-title">Skor Per Test</h5>

                            <!-- Column Chart -->
                            <div id="columnChart"></div>
                            <!-- End Column Chart -->

                        </div>
                    </div><!-- End Visit -->
                </div>

                <div class="col-xxl-6 col-md-6 col-lg-6">
                    <!-- Actual Sales -->
                    <div class="card info-card">
                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body pb-0">
                            <h5 class="card-title">Trend Nilai Quiz</h5>

                            <div id="lineChart" class="echart"></div>

                        </div>
                    </div><!-- End Actual Sales -->
                </div>

                <div class="col-xxl-6 col-md-6 col-lg-6">
                    <!-- Website Traffic -->
                    <div class="card info-card">
                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body pb-0">
                            <h5 class="card-title">Persentase Kelulusan </h5>

                            <div id="trafficChart" style="height: 295px;" class="echart mb-0"></div>

                        </div>
                    </div>
                    <!-- End Website Traffic -->

                </div>

                <div class="col-xxl-6 col-md-6 col-lg-6">
                    <!-- Visit -->
                    <div class="card info-card">
                        <!-- <div class="filter">
                          <a class="icon" href="#" data-bs-toggle="dropdown"><i class="bi bi-three-dots"></i></a>
                          <ul class="dropdown-menu dropdown-menu-end dropdown-menu-arrow">
                            <li class="dropdown-header text-start">
                              <h6>Filter</h6>
                            </li>

                            <li><a class="dropdown-item" href="#">Today</a></li>
                            <li><a class="dropdown-item" href="#">This Month</a></li>
                            <li><a class="dropdown-item" href="#">This Year</a></li>
                          </ul>
                        </div> -->

                        <div class="card-body pb-0">
                            <h5 class="card-title">Quiz E-Test</h5>

                            <!-- Column Chart -->
                            <a><div id="columnChartTest"></div></a>
                            <!-- End Column Chart -->

                        </div>
                    </div><!-- End Visit -->
                </div>

                <!-- Top Selling -->
                <div class="col-12">
                    <div class="card top-selling overflow-auto pb-4">
                        <div class="card-body pb-0">
                            <h5 class="card-title">Data Quiz E-Test</h5>
                            <table id="dataTable" class="display">
                                <thead>
                                    <tr>
                                        
                                    </tr>
                                </thead>
                                <tbody>
                                    <!-- Baris data akan diisi dengan JavaScript -->
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <!-- End Top Selling -->

            </div>

        </section>

    </main><!-- End #main -->
    <a href="#" class="back-to-top d-flex align-items-center justify-content-center"><i class="bi bi-arrow-up-short"></i></a>

    <!-- Vendor JS Files -->
    <script src="~/assets/vendor/apexcharts/apexcharts.min.js"></script>
    <script src="~/assets/vendor/bootstrap/js/bootstrap.bundle.min.js"></script>
    <script src="~/assets/vendor/chart.js/chart.umd.js"></script>
    <script src="~/assets/vendor/echarts/echarts.min.js"></script>
    <script src="~/assets/vendor/quill/quill.js"></script>
    <script src="~/assets/vendor/simple-datatables/simple-datatables.js"></script>
    <script src="~/assets/vendor/tinymce/tinymce.min.js"></script>
    <script src="~/assets/vendor/php-email-form/validate.js"></script>

    <!-- JS Data Table -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.datatables.net/1.13.4/js/jquery.dataTables.min.js"></script>

    <!-- Template Main JS File -->
    @* <script src="~/assets/js/main.js"></script> *@
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>

        $(document).ready(function () {

            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const dropdownMenu = document.getElementById('dropdownMenu');
            const columnChartTest = document.querySelector("#columnChartTest");
            const columnChart = document.querySelector("#columnChart");
            const lineChart = document.querySelector("#lineChart");
            const trafficChart = document.querySelector("#trafficChart");
            const dataTableElement = $('#dataTable');
            const passingScore = 85;

            var tests = [];


            $(document).on('dropdownChanged', function (event, selectedValue) {
                updateDataQuiz(selectedValue);
            });

            // Load the saved dropdown selection from sessionStorage
            var savedSelection = sessionStorage.getItem('dropdownSelection')
            if (savedSelection) {
                updateDataQuiz(savedSelection);
            }

            function updateDataQuiz(employeeNik) {
                $.ajax({
                    url: '@Url.Action("DashboardQuiz", "Dashboard")',
                    type: 'GET',
                    dataType: 'json',
                    data: { employeeNik: employeeNik },
                    success: function (data) {
                        tests = data;
                        console.log(data)
                        updateDropdownAndCharts();
                    },
                    error: function () {
                        console.error("Error fetching data.");
                        tests = [];
                    }
                });
            }

            function formatMonthYear(dateString) {
                const date = new Date(dateString);
                const options = { year: 'numeric', month: 'long' };
                return new Intl.DateTimeFormat('id-ID', options).format(date);
            }

            function setDefaultDates() {
                const today = new Date();
                const startDate = new Date(today.getFullYear(), 0, 1 + 1); // Januari dari tahun ini
                const endDate = new Date(today.getFullYear(), today.getMonth() + 1); // Bulan ini dari tahun ini

                const startDateFormatted = startDate.toISOString().slice(0, 7); // Ambil hanya YYYY-MM
                const endDateFormatted = endDate.toISOString().slice(0, 7); // Ambil hanya YYYY-MM

                startDateInput.value = startDateFormatted;
                endDateInput.value = endDateFormatted;

                document.getElementById('endDate').setAttribute('min', startDateFormatted);
            }

            document.getElementById('startDate').addEventListener('change', function () {
                // Update min pada endDate berdasarkan pilihan startDate
                const startDateValue = this.value;
                document.getElementById('endDate').setAttribute('min', startDateValue);

                // Jika endDate lebih kecil dari startDate, perbarui nilai endDate
                if (document.getElementById('endDate').value < startDateValue) {
                    document.getElementById('endDate').value = startDateValue;
                }
            });

            function updateDropdownAndCharts() {
                const startDate = new Date(startDateInput.value + "-01");
                const endDate = new Date(endDateInput.value + "-01");
                endDate.setMonth(endDate.getMonth() + 1);
                endDate.setDate(0);

                const filteredTests = tests.filter(test => {
                    const testDate = new Date(test.createdDate);
                    return testDate >= startDate && testDate <= endDate;
                });

                console.log(filteredTests);

                dropdownMenu.innerHTML = `
                <li><a href="#" id="select-all" class="dropdown-item">Select All</a></li>
                <li><a href="#" id="deselect-all" class="dropdown-item">Deselect All</a></li>
                <li><hr class="dropdown-divider"></li>
                ${filteredTests.map(test => `
                    <li>
                        <label class="dropdown-item">
                            <input type="checkbox" value="${test.name}" checked>
                            ${test.name}
                        </label>
                    </li>
                `).join('')}
            `;

                // Add event listener to new checkboxes
                dropdownMenu.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                    checkbox.addEventListener('change', updateData);
                });

                // Tambahkan event listener untuk Select All dan Deselect All
                document.getElementById('select-all').addEventListener('click', (event) => {
                    event.preventDefault();
                    dropdownMenu.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                        checkbox.checked = true;
                    });
                    updateData();
                });

                document.getElementById('deselect-all').addEventListener('click', (event) => {
                    event.preventDefault();
                    dropdownMenu.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                        checkbox.checked = false;
                    });
                    updateData();
                });

                updateData();
            }

            function updateData() {
                const selectedTests = Array.from(dropdownMenu.querySelectorAll('input[type="checkbox"]:checked')).map(cb => cb.value);

                const filteredTests = tests.filter(test => selectedTests.includes(test.name));

                // Update cards
                const jumlahTestDiikuti = filteredTests.length;
                const jumlahQuizLulus = filteredTests.filter(test => test.remarks === 'Lulus').length;
                const jumlahQuizTidakLulus = filteredTests.filter(test => test.remarks === 'Tidak Lulus').length;

                const skorTerbaik = filteredTests.length > 0
                    ? Math.max(...filteredTests.map(test => test.score))
                    : 0;
                const skorTerendah = filteredTests.length > 0
                    ? Math.min(...filteredTests.map(test => test.score))
                    : 0;
                const skorAvg = filteredTests.length > 0
                    ? parseFloat((filteredTests.reduce((total, test) => total + test.score, 0) / filteredTests.length).toFixed(2))
                    : 0;

                document.getElementById('jumlahTestDiikuti').textContent = `${jumlahTestDiikuti} Quiz`;
                document.getElementById('jumlahQuizLulus').textContent = `${jumlahQuizLulus} Quiz`;
                document.getElementById('jumlahQuizTidakLulus').textContent = `${jumlahQuizTidakLulus} Quiz`;
                document.getElementById('skorTerbaik').textContent = `${skorTerbaik}`;
                document.getElementById('skorTerendah').textContent = `${skorTerendah}`;
                document.getElementById('skorAvg').textContent = `${skorAvg}`;

                // Update column chart (Jumlah Soal dan Soal Benar)
                var chart = new ApexCharts(columnChartTest, {
                    series: [{
                        name: 'Jumlah Benar',
                        data: []
                    }, {
                        name: 'Jumlah Salah',
                        data: []
                    }],
                    chart: {
                        type: 'bar',
                        height: 280,
                        stacked: true
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '55%',
                            endingShape: 'rounded'
                        },
                    },
                    dataLabels: {
                        enabled: true,
                        style: {
                            fontSize: '9px', // Set font size for data labels
                        }
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: [],
                        labels: {
                            style: {
                                fontSize: '9px', // Set font size for x-axis labels
                            }
                        }
                    },
                    yaxis: {
                        title: {
                            text: 'Questions',
                            style: {
                                fontSize: '9px', // Set font size for y-axis title
                            }
                        },
                        labels: {
                            style: {
                                fontSize: '9px', // Set font size for y-axis labels
                            }
                        }
                    },
                    colors: ['#28a745', '#dc3545'],
                    fill: {
                        opacity: 1,
                        colors: ['#28a745', '#dc3545']
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return val + " Questions"
                            }
                        },
                        style: {
                            fontSize: '9px' // Set font size for tooltip
                        }
                    }
                });

                chart.render();

                chart.updateSeries([{
                    name: 'Jumlah Benar',
                    data: filteredTests.map(test => test.correctAnswers)
                },
                {
                    name: 'Jumlah Salah',
                    data: filteredTests.map(test => test.falseAnswers)
                }]);

                chart.updateOptions({
                    xaxis: {
                        categories: filteredTests.map(test => test.name),
                    }
                });

                // Update column chart (Score)

                function getColor(testName, score) {
                    // Color based on test name
                    let color;
                    if (testName.includes("(R)")) {
                        color = '#17a2b8'; // Hijau Muda
                    } else {
                        // Color based on score
                        if (score < 85) {
                            color = '#dc3545'; // Merah
                        } else {
                            color = '#4CAF50'; // Hijau Terang
                        }
                    }
                    return color;
                }

                var chart1 = new ApexCharts(columnChart, {
                    series: [{
                        name: 'Score',
                        data: []
                    }],
                    chart: {
                        type: 'bar',
                        height: 280, // Tinggi grafik diubah menjadi 300
                    },
                    colors: [],
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '55%',
                            endingShape: 'rounded',
                            distributed: true
                        },
                    },
                    dataLabels: {
                        enabled: true,
                        style: {
                            fontSize: '9px' // Ukuran font untuk label data
                        }
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: [],
                        labels: {
                            style: {
                                fontSize: '9px' // Ukuran font untuk label x-axis
                            }
                        }
                    },
                    yaxis: {
                        title: {
                            text: '%',
                            style: {
                                fontSize: '9px' // Ukuran font untuk judul y-axis
                            }
                        },
                        labels: {
                            style: {
                                fontSize: '9px' // Ukuran font untuk label y-axis
                            }
                        }
                    },
                    fill: {
                        opacity: 1
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return val + " %"
                            }
                        },
                        style: {
                            fontSize: '9px' // Ukuran font untuk tooltip
                        }
                    }
                });

                // Render the chart
                chart1.render();

                chart1.render();

                chart1.updateSeries([{
                    name: 'Score',
                    data: filteredTests.map(test => test.score)
                }]);

                chart1.updateOptions({
                    xaxis: {
                        categories: filteredTests.map(test => test.name),
                    },
                    colors: filteredTests.map(test => getColor(test.name, test.score))
                });

                // Update line chart (Trend Nilai Quiz)
                var chart2 = new ApexCharts(lineChart, {
                    series: [{
                        name: "Skor",
                        data: []
                    }],
                    chart: {
                        height: 280,
                        type: 'line',
                        zoom: {
                            enabled: true
                        }
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        curve: 'smooth'
                    },
                    grid: {
                        row: {
                            colors: ['#f3f3f3', 'transparent'],
                            opacity: 0.5
                        },
                    },
                    xaxis: {
                        categories: [],
                        labels: {
                            style: {
                                fontSize: '9px' // Set font size for x-axis labels
                            }
                        }
                    },
                    yaxis: {
                        labels: {
                            style: {
                                fontSize: '9px' // Set font size for y-axis labels
                            }
                        },
                        title: {
                            text: 'Skor', // Add a title to the y-axis if needed
                            style: {
                                fontSize: '9px' // Set font size for y-axis title
                            }
                        }
                    },
                    tooltip: {
                        style: {
                            fontSize: '9px' // Set font size for tooltip
                        }
                    }
                });

                chart2.render();

                chart2.updateSeries([{
                    name: 'Skor',
                    data: filteredTests.map(test => test.score)
                }]);

                chart2.updateOptions({
                    xaxis: {
                        categories: filteredTests.map(test => formatMonthYear(test.createdDate)),
                    }
                });

                // Update pie chart (Persentase Kelulusan)
                const pieData = [
                    { value: filteredTests.filter(test => test.score >= passingScore).length, name: 'Lulus', itemStyle: { color: '#4caf50' } },
                    { value: filteredTests.filter(test => test.score < passingScore).length, name: 'Tidak Lulus', itemStyle: { color: '#f44336' } }
                ];

                const totalPie = pieData.reduce((sum, item) => sum + item.value, 0);

                echarts.init(trafficChart).setOption({
                    tooltip: {
                        trigger: 'item',
                        formatter: function (params) {
                            let percent = (params.value / totalPie * 100).toFixed(2);
                            return `${params.name}: ${params.value} (${percent}%)`;
                        },
                        textStyle: {
                            fontSize: '9px' // Set font size for tooltip
                        }
                    },
                    legend: {
                        top: '0%',
                        left: 'center',
                        textStyle: {
                            fontSize: '9px' // Set font size for legend
                        }
                    },
                    series: [{
                        name: 'Status Kelulusan',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        avoidLabelOverlap: false,
                        label: {
                            show: true, // Show labels
                            fontSize: '9px', // Set font size for pie labels
                            position: 'outside', // Adjust position as needed
                        },
                        emphasis: {
                            label: {
                                show: true,
                                fontSize: '9px', // Set font size for emphasized labels
                                fontWeight: 'bold'
                            }
                        },
                        labelLine: {
                            show: true // Show label lines
                        },
                        data: pieData
                    }]
                });

                // Update DataTable
                if ($.fn.DataTable.isDataTable('#dataTable')) {
                    dataTableElement.DataTable().clear().destroy();
                }
                dataTableElement.DataTable({
                    data: filteredTests,
                    columns: [
                        { data: 'name', title: 'Nama Test' },
                        { data: 'createdDate', title: 'Tanggal Dibuat' },
                        { data: 'answerDate', title: 'Tanggal Jawab' },
                        { data: 'correctAnswers', title: 'Jumlah Benar' },
                        { data: 'falseAnswers', title: 'Jumlah Salah' },
                        { data: 'totalQuestions', title: 'Jumlah Soal' },
                        { data: 'score', title: 'Skor (%)' },
                        { data: 'remarks', title: 'Keterangan' }
                    ],
                    autoWidth: false, // Matikan autoWidth jika ingin kontrol penuh
                    scrollX: true, // Mengaktifkan scroll horizontal jika tabel lebih lebar dari kontainer
                    paging: true,
                    searching: true,
                    ordering: true,
                    order: [[1, 'asc']],
                    className: 'dataTable'
                });
            }

            startDateInput.addEventListener('change', updateDropdownAndCharts);
            endDateInput.addEventListener('change', updateDropdownAndCharts);

            setDefaultDates();
        });

    </script>

    @* <script>

        document.addEventListener("DOMContentLoaded", () => {
            const startDateInput = document.getElementById('startDate');
            const endDateInput = document.getElementById('endDate');
            const dropdownMenu = document.getElementById('dropdownMenu');
            const columnChartTest = document.querySelector("#columnChartTest");
            const columnChart = document.querySelector("#columnChart");
            const lineChart = document.querySelector("#lineChart");
            const trafficChart = document.querySelector("#trafficChart");
            const dataTableElement = $('#dataTable');


            var tests = [];

            // Data tests
            $.ajax({
                url: '@Url.Action("DashboardQuiz", "Dashboard")',
                type: 'GET',
                dataType: 'json',
                success: function (data) {
                    tests = data;
                    console.log(data)
                    updateDropdownAndCharts();
                },
                error: function () {
                    console.error("Error fetching data.");
                }
            });

            const passingScore = 80; // Nilai ambang batas kelulusan

            function formatMonthYear(dateString) {
                const date = new Date(dateString);
                const options = { year: 'numeric', month: 'long' };
                return new Intl.DateTimeFormat('id-ID', options).format(date);
            }

            function setDefaultDates() {
                const today = new Date();
                const startDate = new Date(today.getFullYear(), 0, 1 + 1); // Januari dari tahun ini
                const endDate = new Date(today.getFullYear(), today.getMonth() + 1); // Bulan ini dari tahun ini

                const startDateFormatted = startDate.toISOString().slice(0, 7); // Ambil hanya YYYY-MM
                const endDateFormatted = endDate.toISOString().slice(0, 7); // Ambil hanya YYYY-MM

                startDateInput.value = startDateFormatted;
                endDateInput.value = endDateFormatted;

                document.getElementById('endDate').setAttribute('min', startDateFormatted);
            }

            document.getElementById('startDate').addEventListener('change', function () {
                // Update min pada endDate berdasarkan pilihan startDate
                const startDateValue = this.value;
                document.getElementById('endDate').setAttribute('min', startDateValue);

                // Jika endDate lebih kecil dari startDate, perbarui nilai endDate
                if (document.getElementById('endDate').value < startDateValue) {
                    document.getElementById('endDate').value = startDateValue;
                }
            });

            function updateDropdownAndCharts() {
                const startDate = new Date(startDateInput.value + "-01");
                const endDate = new Date(endDateInput.value + "-01");
                endDate.setMonth(endDate.getMonth()); // Menyesuaikan agar termasuk bulan akhir

                const filteredTests = tests.filter(test => {
                    const testDate = new Date(test.createdDate);
                    return testDate >= startDate && testDate <= endDate;
                });

                console.log(filteredTests);

                dropdownMenu.innerHTML = filteredTests.map(test => `
                        <li>
                            <label class="dropdown-item">
                                <input type="checkbox" value="${test.name}" checked>
                                ${test.name}
                            </label>
                        </li>
                    `).join('');

                // Add event listener to new checkboxes
                dropdownMenu.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                    checkbox.addEventListener('change', updateData);
                });

                updateData();
            }

            function updateData() {
                const selectedTests = Array.from(dropdownMenu.querySelectorAll('input[type="checkbox"]:checked')).map(cb => cb.value);

                const filteredTests = tests.filter(test => selectedTests.includes(test.name));

                // Update cards
                const jumlahTestDiikuti = filteredTests.length;
                const jumlahQuizLulus = filteredTests.filter(test => test.remarks === 'Lulus').length;
                const skorTerbaik = filteredTests.length > 0
                    ? Math.max(...filteredTests.map(test => test.score))
                    : 0;

                document.getElementById('jumlahTestDiikuti').textContent = `${jumlahTestDiikuti} Quiz`;
                document.getElementById('jumlahQuizLulus').textContent = `${jumlahQuizLulus} Quiz`;
                document.getElementById('skorTerbaik').textContent = `${skorTerbaik}`;

                // Update column chart (Jumlah Soal dan Soal Benar)
                var chart = new ApexCharts(columnChartTest, {
                    series: [{
                        name: 'Jumlah Soal',
                        data: []
                    }, {
                        name: 'Jumlah Benar',
                        data: []
                    }],
                    chart: {
                        type: 'bar',
                        height: 350
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '55%',
                            endingShape: 'rounded'
                        },
                    },
                    dataLabels: {
                        enabled: true
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: []
                    },
                    yaxis: {
                        title: {
                            text: 'Questions'
                        }
                    },
                    fill: {
                        opacity: 1
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return val + " Questions"
                            }
                        }
                    }
                });

                chart.render();

                chart.updateSeries([{
                    name: 'Jumlah Soal',
                    data: filteredTests.map(test => test.totalQuestions)
                },
                {
                    name: 'Jumlah Benar',
                    data: filteredTests.map(test => test.correctAnswers)
                }]);

                chart.updateOptions({
                    xaxis: {
                        categories: filteredTests.map(test => test.name),
                    }
                });

                // Update column chart (Score)
                var chart1 = new ApexCharts(columnChart, {
                    series: [{
                        name: 'Score',
                        data: []
                    }],
                    chart: {
                        type: 'bar',
                        height: 350
                    },
                    plotOptions: {
                        bar: {
                            horizontal: false,
                            columnWidth: '55%',
                            endingShape: 'rounded'
                        },
                    },
                    dataLabels: {
                        enabled: true
                    },
                    stroke: {
                        show: true,
                        width: 2,
                        colors: ['transparent']
                    },
                    xaxis: {
                        categories: [],
                    },
                    yaxis: {
                        title: {
                            text: '%'
                        }
                    },
                    fill: {
                        opacity: 1
                    },
                    tooltip: {
                        y: {
                            formatter: function (val) {
                                return val + " %"
                            }
                        }
                    }
                });

                chart1.render();

                chart1.updateSeries([{
                    name: 'Score',
                    data: filteredTests.map(test => test.score)
                }]);

                chart1.updateOptions({
                    xaxis: {
                        categories: filteredTests.map(test => test.name),
                    }
                });

                // Update line chart (Trend Nilai Quiz)
                var chart2 = new ApexCharts(lineChart, {
                    series: [{
                        name: "Skor",
                        data: []
                    }],
                    chart: {
                        height: 350,
                        type: 'line',
                        zoom: {
                            enabled: true
                        }
                    },
                    dataLabels: {
                        enabled: false
                    },
                    stroke: {
                        curve: 'smooth'
                    },
                    grid: {
                        row: {
                            colors: ['#f3f3f3', 'transparent'],
                            opacity: 0.5
                        },
                    },
                    xaxis: {
                        categories: [],
                    }
                });

                chart2.render();

                chart2.updateSeries([{
                    name: 'Skor',
                    data: filteredTests.map(test => test.score)
                }]);

                chart2.updateOptions({
                    xaxis: {
                        categories: filteredTests.map(test => formatMonthYear(test.createdDate)),
                    }
                });

                // Update pie chart (Persentase Kelulusan)
                const pieData = [
                    { value: filteredTests.filter(test => test.score >= passingScore).length, name: 'Lulus', itemStyle: { color: '#4caf50' } },
                    { value: filteredTests.filter(test => test.score < passingScore).length, name: 'Tidak Lulus', itemStyle: { color: '#f44336' } }
                ];

                const totalPie = pieData.reduce((sum, item) => sum + item.value, 0);

                echarts.init(trafficChart).setOption({
                    tooltip: {
                        trigger: 'item',
                        formatter: function (params) {
                            let percent = (params.value / totalPie * 100).toFixed(2);
                            return `${params.name}: ${params.value} (${percent}%)`;
                        }
                    },
                    legend: {
                        top: '0%',
                        left: 'center'
                    },
                    series: [{
                        name: 'Status Kelulusan',
                        type: 'pie',
                        radius: ['40%', '70%'],
                        avoidLabelOverlap: false,
                        label: {
                            show: false,
                            position: 'center',
                        },
                        emphasis: {
                            label: {
                                show: true,
                                fontSize: '18',
                                fontWeight: 'bold'
                            }
                        },
                        labelLine: {
                            show: false
                        },
                        data: pieData
                    }]
                });

                // Update DataTable
                if ($.fn.DataTable.isDataTable('#dataTable')) {
                    dataTableElement.DataTable().clear().destroy();
                }
                dataTableElement.DataTable({
                    data: filteredTests,
                    columns: [
                        { data: 'name', title: 'Nama Test' },
                        { data: 'createdDate', title: 'Tanggal Dibuat' },
                        { data: 'answerDate', title: 'Tanggal Jawab' },
                        { data: 'correctAnswers', title: 'Jumlah Benar' },
                        { data: 'totalQuestions', title: 'Jumlah Soal' },
                        { data: 'score', title: 'Skor (%)' },
                        { data: 'remarks', title: 'Keterangan' }
                    ],
                    paging: true,
                    searching: true,
                    ordering: true
                });
            }

            startDateInput.addEventListener('change', updateDropdownAndCharts);
            endDateInput.addEventListener('change', updateDropdownAndCharts);

            setDefaultDates();
            updateDropdownAndCharts();
        });
    </script> *@

</body>

</html>
